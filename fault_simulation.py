# -*- coding: utf-8 -*-
"""fault_simulation

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1meVuz7PeFa8LjET-62mqHO5jn05I-SdM
"""

import streamlit as st
import pandas as pd
import time

# Load data
df = pd.read_csv('fault_simulations[1].csv')

# Fault Detection Logic
def detect_fault(row):
    if row['RPM'] < 600 or row['RPM'] > 4000:
        return 1, 'RPM Out of Range'
    if row['Injector Flow'] < 2 or row['Injector Flow'] > 8:
        return 1, 'Injector Flow Out of Range'
    if row['Gear Ratio'] < 1 or row['Gear Ratio'] > 6:
        return 1, 'Gear Ratio Out of Range'
    if row['EGR Valve Position'] < 0.05 or row['EGR Valve Position'] > 0.70:
        return 1, 'EGR Valve Position Out of Range'
    return 0, 'No Fault'

st.title('üöó Vehicle Fault Detection Simulation')

# Select scenario
scenarios = df['Scenario'].unique()
selected_scenario = st.selectbox('Select Driving Scenario', scenarios)

# Speed Control
speed = st.slider('Simulation Speed (seconds between readings)', 0.1, 2.0, 0.5)

if st.button('Start Simulation'):
    scenario_data = df[df['Scenario'] == selected_scenario].reset_index(drop=True)
    st.write(f"### Simulating for scenario: **{selected_scenario}**")

    for idx, row in scenario_data.iterrows():
        fault_code, reason = detect_fault(row)

        with st.container():
            st.write(f"**Time:** {row['Time']:.2f} s")
            st.write(f"**RPM:** {row['RPM']:.2f}")
            st.write(f"**Injector Flow:** {row['Injector Flow']:.2f}")
            st.write(f"**Gear Ratio:** {row['Gear Ratio']:.2f}")
            st.write(f"**EGR Valve Position:** {row['EGR Valve Position']:.2f}")
            st.write(f"**Fault Code:** {'‚ùå Fault Detected' if fault_code else '‚úÖ No Fault'}")
            st.write(f"**Reason:** {reason}")
            st.write("---")

        time.sleep(speed)

    st.success("Simulation Completed!")